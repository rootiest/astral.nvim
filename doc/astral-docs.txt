*astral-docs.txt*         For Neovim >= 0.9.0        Last change: 2024 July 27

==============================================================================
Table of Contents                              *astral-docs-table-of-contents*

1. astral.nvim                                       |astral-docs-astral.nvim|
  - Features                                |astral-docs-astral.nvim-features|
  - Installation                        |astral-docs-astral.nvim-installation|
  - Configuration                      |astral-docs-astral.nvim-configuration|
  - Commands                                |astral-docs-astral.nvim-commands|
  - Autocommands                        |astral-docs-astral.nvim-autocommands|
  - Troubleshooting                  |astral-docs-astral.nvim-troubleshooting|
  - License                                  |astral-docs-astral.nvim-license|
  - Contributing                        |astral-docs-astral.nvim-contributing|
2. Links                                                   |astral-docs-links|

==============================================================================
1. astral.nvim                                       *astral-docs-astral.nvim*

<https://dotfyle.com/plugins/rootiest/astral.nvim>

`astral.nvim` is a Neovim plugin for colorscheme management.

This very simple plugin allows Neovim to remember the last used colorscheme and
restore it when Neovim opens.


FEATURES                                    *astral-docs-astral.nvim-features*

- Remembers the last used colorscheme and restores it when Neovim opens.
- Allows setting fallback themes if the saved colorscheme is not available.


INSTALLATION                            *astral-docs-astral.nvim-installation*

Using `lazy.nvim`, add the plugin to your configuration:

>lua
    require("lazy").setup({
        {
            "astral/astral.nvim",
            version = "*", -- Pin to GitHub releases
        },
    })
<


CONFIGURATION                          *astral-docs-astral.nvim-configuration*

You can configure the `astral` plugin by passing a table of options to
`require("astral").setup()`.


DEFAULT VALUES ~

The default values for `astral` configuration are:

>lua
    local config = {
        restore_colors = true, -- Enable or disable automatic colorscheme restoration
        fallback_themes = { -- Default fallback themes
            "catppuccin",
            "tokyonight",
            "default"
        },
    }
<


EXAMPLE CONFIGURATION ~

To set the options for `astral`, use the following `lazy.nvim` configuration:

>lua
    require("lazy").setup({
        {
            "astral/astral.nvim",
            version = "*", -- Pin to GitHub releases
            opts = {
                restore_colors = true, -- Set to false to disable colorscheme restoration
                fallback_themes = { -- Customize fallback themes
                    "catppuccin",
                    "tokyonight",
                    "default"
                },
            }
        },
    })
<


COMMANDS                                    *astral-docs-astral.nvim-commands*

- **:Astral reset**Reset the colorscheme management.


AUTOCOMMANDS                            *astral-docs-astral.nvim-autocommands*

- **ColorScheme**Store the new name when the colorscheme changes.


TROUBLESHOOTING                      *astral-docs-astral.nvim-troubleshooting*

If you encounter issues with `astral.nvim`, here are some common problems and
solutions:

1. **Colorscheme not restoring on startup**- Ensure`restore_colors` is set to `true` in the configuration.
- Check if the `settings.json` file exists in the `data` path
    (`vim.fn.stdpath("data") .. "/lazy/astral.nvim/settings.json"`).
    If not, the plugin should create it automatically.


2. **Fallback themes not applied**- Verifythat the `fallback_themes` array in the configuration contains
    valid colorscheme names.
- Ensure that the fallback themes are installed and available in Neovim.


3. **Unknown Astral command error**- Ensureyou are using valid commands. The available command is `:Astral reset`.


4. **Colorscheme changes not saved**- Ensurethere are no errors in the autocommand that triggers
    on the `ColorScheme` event.
- Check if the `settings.json` file is writable and that your
    Neovim configuration allows writing to this path.



If the issue persists, please open an issue on the GitHub repository
<https://github.com/rootiest/astral.nvim> with details about your configuration
and the problem you are facing.


LICENSE                                      *astral-docs-astral.nvim-license*

`astral.nvim` is licensed under the MIT License. See LICENSE <LICENSE> for
details.


CONTRIBUTING                            *astral-docs-astral.nvim-contributing*

Contributions are welcome! Please open an issue or submit a pull request to the
GitHub repository <https://github.com/astral/astral.nvim>.

==============================================================================
2. Links                                                   *astral-docs-links*

1. *GitHub Workflow Status*: https://img.shields.io/github/actions/workflow/status/rootiest/astral.nvim/lint-test.yml?branch=main&style=for-the-badge
2. *Lua*: https://img.shields.io/badge/Made%20with%20Lua-blueviolet.svg?style=for-the-badge&logo=lua
3. *Astral.nvim*: https://dotfyle.com/plugins/rootiest/astral.nvim/shield?style=for-the-badge
4. *Astral*: astral.png

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
